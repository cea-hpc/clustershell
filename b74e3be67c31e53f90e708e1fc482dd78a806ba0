{
  "comments": [
    {
      "key": {
        "uuid": "7be8ed98_c0eb60d0",
        "filename": "lib/ClusterShell/NodeUtils.py",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1004434
      },
      "writtenOn": "2017-07-27T15:31:41Z",
      "side": 1,
      "message": "this is still weird to me.\nHow do you know that upcall output is utf-8 encoded?",
      "range": {
        "startLine": 198,
        "startChar": 36,
        "endLine": 198,
        "endChar": 41
      },
      "revId": "b74e3be67c31e53f90e708e1fc482dd78a806ba0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1da2adf_e0ff86cd",
        "filename": "lib/ClusterShell/NodeUtils.py",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1003524
      },
      "writtenOn": "2017-07-27T19:26:21Z",
      "side": 1,
      "message": "Ok I can change that to use\n\n  locale.getpreferredencoding()\n\ninstead, which returns UTF-8 in most cases. While ascii might be enough for 99% of use cases, we could want users to do funky stuffs with groups and UTF-8. UTF-8 is the recommended extension of ASCII anyway in most RFC and there are even work to support it in DNS hostnames (though it\u0027s using punycode most of the time).",
      "parentUuid": "7be8ed98_c0eb60d0",
      "range": {
        "startLine": 198,
        "startChar": 36,
        "endLine": 198,
        "endChar": 41
      },
      "revId": "b74e3be67c31e53f90e708e1fc482dd78a806ba0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c47b727_6823064e",
        "filename": "lib/ClusterShell/NodeUtils.py",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1004434
      },
      "writtenOn": "2017-07-27T20:17:33Z",
      "side": 1,
      "message": "in fact It was more a dumb question, regarding those encodings. It is still weird to me to force this here and there.\n\nHowever, I find a better solution.\n\nPopen with universal_newlines\u003dTrue returns outputs in text mode, with python2.6, 2.7 and 3+.\n\nYou just need to add this option and you will be sure to get a str object. With Python3, getpreferredencodings() will be automatically handled for you",
      "parentUuid": "d1da2adf_e0ff86cd",
      "range": {
        "startLine": 198,
        "startChar": 36,
        "endLine": 198,
        "endChar": 41
      },
      "revId": "b74e3be67c31e53f90e708e1fc482dd78a806ba0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}