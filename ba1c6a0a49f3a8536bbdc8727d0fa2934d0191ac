{
  "comments": [
    {
      "key": {
        "uuid": "9ad9bd40_740f8d88",
        "filename": "lib/ClusterShell/NodeSet.py",
        "patchSetId": 2
      },
      "lineNbr": 764,
      "author": {
        "id": 1003524
      },
      "writtenOn": "2015-07-24T22:02:33Z",
      "side": 1,
      "message": "please do this special trimming early in _scan_string() instead",
      "range": {
        "startLine": 763,
        "startChar": 8,
        "endLine": 764,
        "endChar": 77
      },
      "revId": "ba1c6a0a49f3a8536bbdc8727d0fa2934d0191ac",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_9455f151",
        "filename": "lib/ClusterShell/NodeSet.py",
        "patchSetId": 2
      },
      "lineNbr": 764,
      "author": {
        "id": 1003524
      },
      "writtenOn": "2015-07-24T22:19:41Z",
      "side": 1,
      "message": "also for this use case, prefer a generator instead of a comprehension:\n\n   nsstr \u003d opc.join(substr.strip() for substr in nsstr.split(opc))\n\nhttps://docs.python.org/2/reference/expressions.html#grammar-token-generator_expression",
      "range": {
        "startLine": 764,
        "startChar": 29,
        "endLine": 764,
        "endChar": 76
      },
      "revId": "ba1c6a0a49f3a8536bbdc8727d0fa2934d0191ac",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad9bd40_df0a3725",
        "filename": "lib/ClusterShell/NodeSet.py",
        "patchSetId": 2
      },
      "lineNbr": 910,
      "author": {
        "id": 1005773
      },
      "writtenOn": "2015-07-27T11:03:21Z",
      "side": 1,
      "message": "Should I do the same here, or do you prefer keeping \u0027pat\u0027 as the variable name ?",
      "revId": "ba1c6a0a49f3a8536bbdc8727d0fa2934d0191ac",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}